#include "iarduino_RTC.h"

//		Вывод даты и времени
//		Установка даты и времени от начала эпохи Unix
void	iarduino_RTC::settimeUnix(uint32_t i, bool needWrite){											//															(сек)
			uint16_t j;	uint8_t k;																			//	Объявляем временные переменные.
			arrCalculationTime[0]	= i % 60;																//  Получаем текущее значение секунд.						(остаток от деления секунд прошедших с начала эпохи Unix на количество секунд в минуте)
			i						= i / 60;																//  Получаем количество минут прошедших с начала эпохи Unix.
			arrCalculationTime[1]	= i % 60;																//  Получаем текущее значение минут.						(остаток от деления минут  прошедших с начала эпохи Unix на количество минут в часе)
			i						= i / 60;																//  Получаем количество часов прошедших с начала эпохи Unix.
			arrCalculationTime[2]	= i % 24;																//  Получаем текущее значение часов.						(остаток от деления часов  прошедших с начала эпохи Unix на количество часов в дне)
			i						= i / 24;																//  Получаем количество  дней прошедших с начала эпохи Unix.
			j						= 0;																	//	Получаем количество   лет прошедших с начала эпохи Unix.
			while((j+1) * 365 + (j+2) / 4 - (j+70) / 100 + (j+370) / 400 <= i) j++;
			arrCalculationTime[6]	= (i+4) % 7;															//	Получаем текущий день недели.							(0-воскресенье, 1-понедельник, ... , 6-суббота)
			i						=  i - (j * 365) - (j+1) / 4 + (j+69) / 100 - (j+369) / 400;			//	Получаем количество  дней прошедших в текущем году.
			j 						= (1970+j);
			arrCalculationTime[5]	= j % 100;		 														//	Получаем две последние цифры текущего года.
			k						= ((j % 4) | (j % 100 == 0) | (j % 400)) ? 28 : 29;						//	Получаем количество дней в феврале текущего года.
			j=arrCalculationTime[4]	= 0;																	//  Получаем текущее значение месяца.
			while(i >= j){
				j = ++arrCalculationTime[4];
				j=(((j+1) % 2) ^ (j < 8)) ? 31 : (j == 2 ? k : 30);
				i -= j;
			}
			arrCalculationTime[3]	= i+1;																	//	Получаем текущий день.
			if(needWrite)
				funcWriteTime();
}

//		Чтение даты и времени из регистров модуля:
void	iarduino_RTC::funcReadTime(void){
			for (uint8_t i = 0; i < 7; i++)
				arrCalculationTime[i] = funcConvertCodeToNum(objClass -> funcReadTimeIndex(i));				//	Получаем секунды, минуты, часы, день, месяц, год, день недели
			arrCalculationTime[6]++;																		//	(в регистре значение дня недели от 1 до 7, а в переменной от 0 до 6)
			Unix       = funcCalculationUnix();																//  Получаем количество секунд						(прошедших с начала эпохи Unix)
			valRequest = millis();																			//	Сохраняем время данного запроса
}

//		Запись даты и времени в регистры модуля:
void	iarduino_RTC::funcWriteTime(){
			arrCalculationTime[6]++;
			for (uint8_t i = 0; i < 7; i++)
				objClass -> funcWriteTimeIndex(i, funcConvertNumToCode(arrCalculationTime[i]));				//	Сохраняем секунды, минуты, часы, день, месяц, год, день недели
			arrCalculationTime[6]--;
}

//		Расчёт времени без обращения к модулю:
void	iarduino_RTC::funcCalculationTime(void){
			uint32_t i=(millis()-valRequest) / 1000;														//	Определяем количество секунд					(прошедших после последнего обращения к модулю)
			valRequest = millis();
			Unix += i;																						//  Получаем количество секунд прошедших с начала эпохи Unix
			settimeUnix(Unix, false);
}

//		Расчёт количества cекунд прошедших с начала эпохи Unix:
uint32_t iarduino_RTC::funcCalculationUnix(void){															//													(без параметров)
			uint32_t i;																						//	Объявляем  переменную для хранения результата.	(рассчёты производятся из значений переменных: seconds, minutes, Hours, day, month, year и valCentury).
			uint8_t month = arrCalculationTime[4];
			uint32_t j = (uint32_t)(valCentury-1) * 100 + arrCalculationTime[5];							//	Определяем текущий год с учётом века.			(valCentury - век, year - последние два знака текущего года).
			i  = j - 1970;																					//  Определяем количество прошедших лет				(с 01.01.1970 г.)
			i  = i * 365 + ((i+1)/4) - (i+69) / 100 + (i+369) / 400;										//  Определяем количество дней в прошедших годах	((i+1)/4) - количество прошедших високосных лет (без учёта текущего года).
			i += (month-1)*30 + ((month + (month<9 ? 0 : 1)) / 2);											//  Добавляем  количество дней в прошедших месяцах	((month+(month<9?0:1))/2) - количество прошедших месяцев текущего года, содержащих 31 день.
			i -= month > 2 ? ((j % 4) | (j % 100 == 0) | (j % 400) ? 2 : 1) : 0;							//  Вычитаем   1 или 2 дня из февраля текущего года	((month>2) - если февраль уже прошел, j%4==0 - если текущий год високосный)
			i += arrCalculationTime[3]-1;																	//  Добавляем  количество прошедших дней этого месяца
			i *= 86400;																						//	Получаем   количество секунд прошедших дней
			i += (uint32_t)arrCalculationTime[2] * 3600;
			i += (uint32_t)arrCalculationTime[1] * 60 + arrCalculationTime[0];								//	Добавляем  количество секунд текущего дня
			return i;																						//	Возвращаем результат
}
